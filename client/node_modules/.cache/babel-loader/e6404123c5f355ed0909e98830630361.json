{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\"; // Actions\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\"; // Types\n\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = yield firestore.collection(\"collections\");\n    const snapShop = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShop);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","put","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapShop","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP,C,CAKA;;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP,C,CAKA;;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAG,MAAMN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMX,IAAI,CAC/BE,+BAD+B,EAE/BO,QAF+B,CAAjC;AAKA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CACdO,eAAe,CAACU,uBADF,EAEdT,qBAFc,CAAhB;AAID","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\n// Actions\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\n// Types\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = yield firestore.collection(\"collections\");\n    const snapShop = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapShop\n    );\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}