{"ast":null,"code":"import { all, takeLatest, put, call } from \"redux-saga/effects\";\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({\n  payload: {\n    id,\n    imageUrl,\n    name,\n    price\n  }\n}) {\n  const item = {\n    id,\n    imageUrl,\n    name,\n    price\n  }; // Retrieve user cart items from firestore collection\n\n  const cartItem = yield getCartItems();\n  console.log(\"cartItem collection \", cartItem);\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","takeLatest","put","call","addItemToCart","getCartItems","UserActionTypes","clearCart","CartActionTypes","clearCartOnSignOut","addItem","payload","id","imageUrl","name","price","item","cartItem","console","log","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddItem","ADD_ITEM_START","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,QAAMP,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;;AAED,UAAUG,OAAV,CAAkB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB;AAAX,CAAlB,EAA8D;AAC5D,QAAMC,IAAI,GAAG;AACXJ,IAAAA,EADW;AAEXC,IAAAA,QAFW;AAGXC,IAAAA,IAHW;AAIXC,IAAAA;AAJW,GAAb,CAD4D,CAQ5D;;AACA,QAAME,QAAQ,GAAG,MAAMZ,YAAY,EAAnC;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,QAApC;AACD;;AAED,UAAUG,gBAAV,GAA6B;AAC3B,QAAMnB,UAAU,CAACK,eAAe,CAACe,gBAAjB,EAAmCZ,kBAAnC,CAAhB;AACD;;AAED,UAAUa,SAAV,GAAsB;AACpB,QAAMrB,UAAU,CAACO,eAAe,CAACe,cAAjB,EAAiCb,OAAjC,CAAhB;AACD;;AAED,OAAO,UAAUc,SAAV,GAAsB;AAC3B,QAAMxB,GAAG,CAAC,CAACG,IAAI,CAACiB,gBAAD,CAAL,EAAyBjB,IAAI,CAACmB,SAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\n\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({ payload: { id, imageUrl, name, price } }) {\n  const item = {\n    id,\n    imageUrl,\n    name,\n    price,\n  };\n\n  // Retrieve user cart items from firestore collection\n  const cartItem = yield getCartItems();\n  console.log(\"cartItem collection \", cartItem);\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}\n"]},"metadata":{},"sourceType":"module"}