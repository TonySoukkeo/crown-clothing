{"ast":null,"code":"// import { takeLatest, put, all, call } from \"redux-saga/effects\";\n// import UserActionTypes from \"./user.types\";\n// import { signInFailure, signInSuccess } from \"./user.actions\";\n// import {\n//   auth,\n//   googleProvider,\n//   createUserProfileDocument,\n// } from \"../../firebase/firebase.utils\";\n// export function* getSnapshotFromUserAuth(userAuth) {\n//   try {\n//     const userRef = yield call(createUserProfileDocument(userAuth));\n//     const userSnapshot = yield userRef.get();\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* signInWithGoogle() {\n//   try {\n//     const { user } = yield auth.signInWithPopup(googleProvider);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* signInWithEmail({ payload: { email, password } }) {\n//   try {\n//     const { user } = yield auth.signInWithEmailAndPassword(email, password);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* onGoogleSignInStart() {\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n// }\n// export function* onEmailSignInStart() {\n//   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n// }\n// export function* userSagas() {\n//   yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n// }\nimport { takeLatest, all, put, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure } from \"../user/user.actions\";\nexport function* googleSignInStart() {\n  try {\n    const userRef = auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","all","put","call","UserActionTypes","auth","createUserProfileDocument","googleProvider","signInFailure","googleSignInStart","userRef","signInWithPopup","console","log","err","message","onGoogleSignInStart","GOOGLE_SIGN_IN_START"],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACF,UAAMC,OAAO,GAAGL,IAAI,CAACM,eAAL,CAAqBJ,cAArB,CAAhB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAACM,aAAa,CAACM,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMhB,UAAU,CAACI,eAAe,CAACa,oBAAjB,EAAuCR,iBAAvC,CAAhB;AACD","sourcesContent":["// import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\n// import UserActionTypes from \"./user.types\";\n\n// import { signInFailure, signInSuccess } from \"./user.actions\";\n\n// import {\n//   auth,\n//   googleProvider,\n//   createUserProfileDocument,\n// } from \"../../firebase/firebase.utils\";\n\n// export function* getSnapshotFromUserAuth(userAuth) {\n//   try {\n//     const userRef = yield call(createUserProfileDocument(userAuth));\n\n//     const userSnapshot = yield userRef.get();\n\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* signInWithGoogle() {\n//   try {\n//     const { user } = yield auth.signInWithPopup(googleProvider);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* signInWithEmail({ payload: { email, password } }) {\n//   try {\n//     const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* onGoogleSignInStart() {\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n// }\n\n// export function* onEmailSignInStart() {\n//   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n// }\n\n// export function* userSagas() {\n//   yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n// }\n\nimport { takeLatest, all, put, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\n\nimport { signInFailure } from \"../user/user.actions\";\n\nexport function* googleSignInStart() {\n  try {\n    const userRef = auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n"]},"metadata":{},"sourceType":"module"}