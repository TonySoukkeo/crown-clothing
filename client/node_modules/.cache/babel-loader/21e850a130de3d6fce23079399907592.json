{"ast":null,"code":"import { all, takeLatest, put, call } from \"redux-saga/effects\";\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nimport { firestore } from \"firebase\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({\n  payload: {\n    item,\n    currentUser\n  }\n}) {\n  const userId = currentUser.id; // Retrieve user cart items from firestore collection\n\n  const cartItems = yield getCartItems(userId);\n  const updatedCartItems = yield addItemToCart(cartItems, item); // Update users cart on firebase with new updated cart\n\n  yield firestore.CollectionReference(\"Carts\").doc(current.user.id).set({\n    cartItems: updatedCartItems\n  });\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","takeLatest","put","call","addItemToCart","getCartItems","UserActionTypes","clearCart","CartActionTypes","firestore","clearCartOnSignOut","addItem","payload","item","currentUser","userId","id","cartItems","updatedCartItems","CollectionReference","doc","current","user","set","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddItem","ADD_ITEM_START","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,QAAMR,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;;AAED,UAAUI,OAAV,CAAkB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAX,CAAlB,EAAsD;AACpD,QAAMC,MAAM,GAAGD,WAAW,CAACE,EAA3B,CADoD,CAGpD;;AACA,QAAMC,SAAS,GAAG,MAAMZ,YAAY,CAACU,MAAD,CAApC;AAEA,QAAMG,gBAAgB,GAAG,MAAMd,aAAa,CAACa,SAAD,EAAYJ,IAAZ,CAA5C,CANoD,CAQpD;;AACA,QAAMJ,SAAS,CAACU,mBAAV,CAA8B,OAA9B,EAAuCC,GAAvC,CAA2CC,OAAO,CAACC,IAAR,CAAaN,EAAxD,EAA4DO,GAA5D,CAAgE;AACpEN,IAAAA,SAAS,EAAEC;AADyD,GAAhE,CAAN;AAGD;;AAED,UAAUM,gBAAV,GAA6B;AAC3B,QAAMvB,UAAU,CAACK,eAAe,CAACmB,gBAAjB,EAAmCf,kBAAnC,CAAhB;AACD;;AAED,UAAUgB,SAAV,GAAsB;AACpB,QAAMzB,UAAU,CAACO,eAAe,CAACmB,cAAjB,EAAiChB,OAAjC,CAAhB;AACD;;AAED,OAAO,UAAUiB,SAAV,GAAsB;AAC3B,QAAM5B,GAAG,CAAC,CAACG,IAAI,CAACqB,gBAAD,CAAL,EAAyBrB,IAAI,CAACuB,SAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\n\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nimport { firestore } from \"firebase\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({ payload: { item, currentUser } }) {\n  const userId = currentUser.id;\n\n  // Retrieve user cart items from firestore collection\n  const cartItems = yield getCartItems(userId);\n\n  const updatedCartItems = yield addItemToCart(cartItems, item);\n\n  // Update users cart on firebase with new updated cart\n  yield firestore.CollectionReference(\"Carts\").doc(current.user.id).set({\n    cartItems: updatedCartItems,\n  });\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}\n"]},"metadata":{},"sourceType":"module"}