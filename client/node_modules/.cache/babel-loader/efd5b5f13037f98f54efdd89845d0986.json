{"ast":null,"code":"import { all, takeLatest, put, call } from \"redux-saga/effects\";\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({\n  payload: {\n    item,\n    currentUser\n  }\n}) {\n  console.log({\n    item,\n    currentUser\n  }); // const item = {\n  //   id,\n  //   imageUrl,\n  //   name,\n  //   price,\n  // };\n  // // Retrieve user cart items from firestore collection\n  // const cartItem = yield getCartItems();\n  // console.log(\"cartItem collection \", cartItem);\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","takeLatest","put","call","addItemToCart","getCartItems","UserActionTypes","clearCart","CartActionTypes","clearCartOnSignOut","addItem","payload","item","currentUser","console","log","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddItem","ADD_ITEM_START","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,QAAMP,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;;AAED,UAAUG,OAAV,CAAkB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAX,CAAlB,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY;AACVH,IAAAA,IADU;AAEVC,IAAAA;AAFU,GAAZ,EADoD,CAKpD;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD;;AAED,UAAUG,gBAAV,GAA6B;AAC3B,QAAMf,UAAU,CAACK,eAAe,CAACW,gBAAjB,EAAmCR,kBAAnC,CAAhB;AACD;;AAED,UAAUS,SAAV,GAAsB;AACpB,QAAMjB,UAAU,CAACO,eAAe,CAACW,cAAjB,EAAiCT,OAAjC,CAAhB;AACD;;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMpB,GAAG,CAAC,CAACG,IAAI,CAACa,gBAAD,CAAL,EAAyBb,IAAI,CAACe,SAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\n\nimport { clearCart } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({ payload: { item, currentUser } }) {\n  console.log({\n    item,\n    currentUser,\n  });\n  // const item = {\n  //   id,\n  //   imageUrl,\n  //   name,\n  //   price,\n  // };\n\n  // // Retrieve user cart items from firestore collection\n  // const cartItem = yield getCartItems();\n  // console.log(\"cartItem collection \", cartItem);\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}\n"]},"metadata":{},"sourceType":"module"}