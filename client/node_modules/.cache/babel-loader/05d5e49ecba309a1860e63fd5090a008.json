{"ast":null,"code":"// import { takeLatest, put, all, call } from \"redux-saga/effects\";\n// import UserActionTypes from \"./user.types\";\n// import { signInFailure, signInSuccess } from \"./user.actions\";\n// import {\n//   auth,\n//   googleProvider,\n//   createUserProfileDocument,\n// } from \"../../firebase/firebase.utils\";\n// export function* getSnapshotFromUserAuth(userAuth) {\n//   try {\n//     const userRef = yield call(createUserProfileDocument(userAuth));\n//     const userSnapshot = yield userRef.get();\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* signInWithGoogle() {\n//   try {\n//     const { user } = yield auth.signInWithPopup(googleProvider);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* signInWithEmail({ payload: { email, password } }) {\n//   try {\n//     const { user } = yield auth.signInWithEmailAndPassword(email, password);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n// export function* onGoogleSignInStart() {\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n// }\n// export function* onEmailSignInStart() {\n//   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n// }\n// export function* userSagas() {\n//   yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n// }\nimport { takeLatest, all, put, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"../user/user.actions\";\nexport function* googleSignInStart() {\n  try {\n    const userRef = auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument(userAuth));\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","all","put","call","UserActionTypes","auth","createUserProfileDocument","googleProvider","signInFailure","signInSuccess","googleSignInStart","userRef","signInWithPopup","console","log","err","message","getSnapshotFromUserAuth","userAuth","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","user","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,IADF,EAEEC,yBAFF,EAGEC,cAHF,QAIO,+BAJP;AAMA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,sBAA7C;AAEA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,MAAI;AACF,UAAMC,OAAO,GAAGN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAAhB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD,CAGE,OAAOI,GAAP,EAAY;AACZ,UAAMb,GAAG,CAACM,aAAa,CAACO,GAAG,CAACC,OAAL,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AACjD,MAAI;AACF,UAAMP,OAAO,GAAG,MAAMR,IAAI,CAACG,yBAAyB,CAACY,QAAD,CAA1B,CAA1B;AAEA,UAAMC,YAAY,GAAG,MAAMR,OAAO,CAACS,GAAR,EAA3B;AAEA,UAAMlB,GAAG,CAACO,aAAa,CAAC;AAAEY,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACM,aAAa,CAACe,KAAK,CAACP,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMvB,IAAI,CAACwB,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAvB;AAEA,UAAMV,uBAAuB,CAACW,IAAD,CAA7B;AACD,GAJD,CAIE,OAAOL,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACM,aAAa,CAACe,KAAK,CAACP,OAAP,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUc,kBAAV,GAA+B;AACpC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCP,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAMhC,UAAU,CAACI,eAAe,CAAC6B,oBAAjB,EAAuCvB,iBAAvC,CAAhB;AACD;AAED,OAAO,UAAUwB,SAAV,GAAsB;AAC3B,QAAMjC,GAAG,CAAC,CAACE,IAAI,CAAC6B,mBAAD,CAAL,EAA4B7B,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["// import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\n// import UserActionTypes from \"./user.types\";\n\n// import { signInFailure, signInSuccess } from \"./user.actions\";\n\n// import {\n//   auth,\n//   googleProvider,\n//   createUserProfileDocument,\n// } from \"../../firebase/firebase.utils\";\n\n// export function* getSnapshotFromUserAuth(userAuth) {\n//   try {\n//     const userRef = yield call(createUserProfileDocument(userAuth));\n\n//     const userSnapshot = yield userRef.get();\n\n//     yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* signInWithGoogle() {\n//   try {\n//     const { user } = yield auth.signInWithPopup(googleProvider);\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* signInWithEmail({ payload: { email, password } }) {\n//   try {\n//     const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n//     yield getSnapshotFromUserAuth(user);\n//   } catch (error) {\n//     yield put(signInFailure(error.message));\n//   }\n// }\n\n// export function* onGoogleSignInStart() {\n//   yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n// }\n\n// export function* onEmailSignInStart() {\n//   yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n// }\n\n// export function* userSagas() {\n//   yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n// }\n\nimport { takeLatest, all, put, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\n\nimport {\n  auth,\n  createUserProfileDocument,\n  googleProvider,\n} from \"../../firebase/firebase.utils\";\n\nimport { signInFailure, signInSuccess } from \"../user/user.actions\";\n\nexport function* googleSignInStart() {\n  try {\n    const userRef = auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument(userAuth));\n\n    const userSnapshot = yield userRef.get();\n\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignInStart);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}