{"ast":null,"code":"import { all, takeLatest, put, call } from \"redux-saga/effects\";\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\nimport { clearCart, addItemSucccess, addItemFailure } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({\n  payload: {\n    item,\n    currentUser\n  }\n}) {\n  try {\n    const userId = currentUser.id; // Retrieve user cart items from firestore collection\n\n    const cartItems = yield getCartItems(userId); // const updatedCartItems = yield addItemToCart(cartItems, item);\n    // // Update users cart on firebase with new updated cart\n    // yield firestore.collection(\"Carts\").doc(currentUser.id).set({\n    //   cartItems: updatedCartItems,\n    // });\n    // // Update cart items on client side\n    // yield put(addItemSucccess(updatedCartItems));\n  } catch (error) {\n    yield put(addItemFailure(error));\n  }\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/client/src/redux/cart/cart.sagas.js"],"names":["all","takeLatest","put","call","addItemToCart","getCartItems","UserActionTypes","clearCart","addItemSucccess","addItemFailure","CartActionTypes","firestore","clearCartOnSignOut","addItem","payload","item","currentUser","userId","id","cartItems","error","onSignOutSuccess","SIGN_OUT_SUCCESS","onAddItem","ADD_ITEM_START","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,cAArC,QAA2D,gBAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,UAAUC,kBAAV,GAA+B;AAC7B,QAAMV,GAAG,CAACK,SAAS,EAAV,CAAT;AACD;;AAED,UAAUM,OAAV,CAAkB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR;AAAX,CAAlB,EAAsD;AACpD,MAAI;AACF,UAAMC,MAAM,GAAGD,WAAW,CAACE,EAA3B,CADE,CAGF;;AACA,UAAMC,SAAS,GAAG,MAAMd,YAAY,CAACY,MAAD,CAApC,CAJE,CAMF;AAEA;AACA;AACA;AACA;AAEA;AACA;AACD,GAfD,CAeE,OAAOG,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACO,cAAc,CAACW,KAAD,CAAf,CAAT;AACD;AACF;;AAED,UAAUC,gBAAV,GAA6B;AAC3B,QAAMpB,UAAU,CAACK,eAAe,CAACgB,gBAAjB,EAAmCV,kBAAnC,CAAhB;AACD;;AAED,UAAUW,SAAV,GAAsB;AACpB,QAAMtB,UAAU,CAACS,eAAe,CAACc,cAAjB,EAAiCX,OAAjC,CAAhB;AACD;;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC3B,QAAMzB,GAAG,CAAC,CAACG,IAAI,CAACkB,gBAAD,CAAL,EAAyBlB,IAAI,CAACoB,SAAD,CAA7B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { addItemToCart, getCartItems } from \"./cart.utils\";\nimport UserActionTypes from \"../user/user.types\";\n\nimport { clearCart, addItemSucccess, addItemFailure } from \"./cart.actions\";\nimport CartActionTypes from \"./cart.types\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nfunction* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nfunction* addItem({ payload: { item, currentUser } }) {\n  try {\n    const userId = currentUser.id;\n\n    // Retrieve user cart items from firestore collection\n    const cartItems = yield getCartItems(userId);\n\n    // const updatedCartItems = yield addItemToCart(cartItems, item);\n\n    // // Update users cart on firebase with new updated cart\n    // yield firestore.collection(\"Carts\").doc(currentUser.id).set({\n    //   cartItems: updatedCartItems,\n    // });\n\n    // // Update cart items on client side\n    // yield put(addItemSucccess(updatedCartItems));\n  } catch (error) {\n    yield put(addItemFailure(error));\n  }\n}\n\nfunction* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nfunction* onAddItem() {\n  yield takeLatest(CartActionTypes.ADD_ITEM_START, addItem);\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess), call(onAddItem)]);\n}\n"]},"metadata":{},"sourceType":"module"}