{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBLQbnOBMr7pv7bHeVoVwWdGGTT3i7kO-k\",\n  authDomain: \"crown-db-d3648.firebaseapp.com\",\n  databaseURL: \"https://crown-db-d3648.firebaseio.com\",\n  projectId: \"crown-db-d3648\",\n  storageBucket: \"crown-db-d3648.appspot.com\",\n  messagingSenderId: \"636176816129\",\n  appId: \"1:636176816129:web:39501aa176f022796bc800\",\n  measurementId: \"G-8NP01TNC69\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/3423433333234`);\n  console.log(userRef);\n  const snapShot = await userRef.get(); // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName: \"Testing\",\n  //       email: \"test@test.com\",\n  //       createdAt,\n  //       ...additionalData,\n  //     });\n  //   } catch (err) {\n  //     console.log(\"error creating users\", err.message);\n  //   }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/tonysoukkeo/Desktop/Coding/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,WAAW,EAAE,uCAHA;AAIbC,EAAAA,SAAS,EAAE,gBAJE;AAKbC,EAAAA,aAAa,EAAE,4BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,qBAAf,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB,CAL2E,CAO3E;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAON,OAAP;AACD,CAxBM;AA0BPb,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AAEA,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBLQbnOBMr7pv7bHeVoVwWdGGTT3i7kO-k\",\n  authDomain: \"crown-db-d3648.firebaseapp.com\",\n  databaseURL: \"https://crown-db-d3648.firebaseio.com\",\n  projectId: \"crown-db-d3648\",\n  storageBucket: \"crown-db-d3648.appspot.com\",\n  messagingSenderId: \"636176816129\",\n  appId: \"1:636176816129:web:39501aa176f022796bc800\",\n  measurementId: \"G-8NP01TNC69\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/3423433333234`);\n  console.log(userRef);\n  const snapShot = await userRef.get();\n\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n\n  //   try {\n  //     await userRef.set({\n  //       displayName: \"Testing\",\n  //       email: \"test@test.com\",\n  //       createdAt,\n  //       ...additionalData,\n  //     });\n  //   } catch (err) {\n  //     console.log(\"error creating users\", err.message);\n  //   }\n  // }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}